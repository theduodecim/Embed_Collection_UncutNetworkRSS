class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.render()}static get observedAttributes(){return["collection"]}attributeChangedCallback(n,e,t){"collection"===n&&this.render()}async render(){var n,e;const t=this.shadowRoot;t.innerHTML='\n      <style>\n        * {\n          box-sizing: border-box;\n        }\n\n        :host {\n          display: block;\n          font-family: Arial, sans-serif;\n        }\n\n        .grid-container {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n          gap: 20px;\n          padding: 20px;\n          background-color: #f9f9f9;\n          border: 1px solid #ddd;\n          border-radius: 10px;\n        }\n\n        .card {\n          border: 1px solid #ddd;\n          border-radius: 10px;\n          overflow: hidden;\n          background-color: #fff;\n          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n          transition: transform 0.2s ease-in-out;\n          cursor: pointer;\n          text-decoration: none;\n          color: inherit;\n          display: block;\n        }\n\n        .card:hover {\n          transform: scale(1.05);\n        }\n\n        .card img {\n          width: 100%;\n          height: auto;\n          display: block;\n        }\n\n        .card-content {\n          padding: 15px;\n        }\n\n        .card-content h3 {\n          margin: 0 0 10px;\n          font-size: 1.2em;\n          color: #333;\n        }\n\n        .card-content p {\n          margin: 0;\n          font-size: 1em;\n          color: #666;\n        }\n\n        .collection-title {\n          text-align: center;\n          font-size: 1.5em;\n          margin-bottom: 20px;\n          padding: 10px;\n          background-color: #f0f0f0;\n          border: 1px solid #ddd;\n          border-radius: 10px;\n        }\n      </style>\n      <div>\n        <div class="grid-container" id="content">\n          <p>Loading data...</p>\n        </div>\n      </div>\n    ';try{const o=this.getAttribute("collection")||"Default",r=await fetch(`https://uncut.network/api/rss?collection_id=${o}`),i=await r.text(),l=(new DOMParser).parseFromString(i,"text/xml"),d=l.querySelectorAll("item");let c=(null===(e=null===(n=l.querySelector("channel > title"))||void 0===n?void 0:n.textContent)||void 0===e?void 0:e.replace(/<!\[CDATA\[(.*?)\]\]>/,"$1"))||"Unknown Collection",a=t.querySelector("#collection-title");a||(a=document.createElement("div"),a.id="collection-title",a.classList.add("collection-title"),t.prepend(a)),a.textContent=`Collection: ${c}`;const s=t.querySelector("#content");s&&(s.innerHTML="",d.forEach((n=>{var e,t,o,r,i,l,d;const c=(null===(t=null===(e=n.querySelector("title"))||void 0===e?void 0:e.textContent)||void 0===t?void 0:t.replace(/<!\[CDATA\[(.*?)\]\]>/,"$1"))||"No Title",a=(null===(r=null===(o=n.querySelector("description"))||void 0===o?void 0:o.textContent)||void 0===r?void 0:r.replace(/<!\[CDATA\[(.*?)\]\]>/,"$1"))||"No Description",p=(null===(i=n.querySelector("enclosure"))||void 0===i?void 0:i.getAttribute("url"))||"https://via.placeholder.com/300x200?text=No+Image",u=(null===(d=null===(l=n.querySelector("link"))||void 0===l?void 0:l.textContent)||void 0===d?void 0:d.trim())||"#",m=document.createElement("a");m.classList.add("card"),m.href=u,m.target="_blank",m.rel="noopener noreferrer",m.innerHTML=`\n            <img src="${p}" alt="${c}" />\n            <div class="card-content">\n              <h3>${c}</h3>\n              <p>${a}</p>\n            </div>\n          `,s.appendChild(m)})))}catch(n){const e=t.querySelector("#content");e&&(e.innerHTML="<p>Error loading RSS data.</p>")}}}customElements.define("my-market",n);
